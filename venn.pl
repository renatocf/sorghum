#!/usr/bin/perl
package main;
use v5.10;

#######################################################################
# Program:    venn.pl                                                 #
# mantainer:  Renato Cordeiro Ferreira                                #
# usage:      Gets a _venn.txt file, generated by SGEval, and edits   #
#             its info for printing it in a more legible way.         #
# date:       08/08/13 (dd/mm/yy)                                     #
#######################################################################

# Pragmas
use strict;
use warnings;

## GLOBAL VARIABLES ###################################################
my %hash = ();
my $key_msize = 0;
my $num_msize = 0;

## SCRIPTS ############################################################
# Getting all files to be processed
FILE: for my $file (@ARGV)
{
    open(FILE, "<", $file);
    LINE: while(my $exp = <FILE>) 
    { 
        # All the // or sequences are taken off
        next LINE if($exp =~ /^\t|\/\//);
        chomp $exp; # Taking out '\n'
        
        # Splitting the sentence in 2 parts: groups and numbers
        my ($key, $number) = split("\t", $exp); 
        
        # Splits fields and sort them
        my @fields = split(/\|/, $key);
        foreach my $field (@fields)
        {
            $field =~ s/\_chr\d\d//g;
            $field =~ s/\.clean\..*//g;
            $field =~ s/Sb.*pasa/pasa/;
        }
        $key = join("|",sort(@fields));
        
        # Stores in the hash
        $hash{$key} += $number;
        
        # Takes the biggest size of the keys to print it later
        my $s = length $key;
        ($s > $key_msize) ? ($key_msize = $s) : ();
    }
    close FILE;
}

# Process all numbers in a more legible format
FORMAT: foreach (values %hash)
{
    my $size = 0;
    $size += 4 while(s/(.*)(\d)(\d{3})/$1$2_$3/);
    $size += ($size != 0) ? (1 + length $1) : (length);
    ($size > $num_msize) ? ($num_msize = $size) : ()
}

PRINT: for my $key (sort keys(%hash)) 
{
    # Prints all the keys in the following format:
    # pred1|pred2|...|predn => 23.543.354.134
    printf "%-*s => %*s\n", $key_msize, $key, 
                            $num_msize, $hash{$key};
}
